{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["bankOne","keyCode","keyTrigger","id","url","bankTwo","activeStyle","backgroundColor","boxShadow","height","marginTop","inactiveStyle","DrumPad","props","state","padStyle","playSound","bind","handleKeyPress","activatePad","document","addEventListener","this","removeEventListener","e","power","setState","sound","getElementById","currentTime","play","setTimeout","updateDisplay","clipId","replace","onClick","className","style","src","clip","React","Component","PadBank","padBank","currentPadBank","map","drumObj","i","padBankArr","key","App","display","String","fromCharCode","currentPadBankId","sliderVal","displayClipName","selectBank","adjustVolume","powerControl","clearDisplay","name","volVal","slice","call","getElementsByClassName","forEach","console","log","volume","clipVolume","Switch","onChange","inputProps","Grid","container","spacing","item","xs","Slider","min","max","step","value","aria-labelledby","ReactDOM","render","Boolean","window","location","hostname","match","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8VAQMA,G,MAAU,CAAC,CACfC,QAAS,GACTC,WAAY,IACZC,GAAI,WACJC,IAAK,4DACJ,CACDH,QAAS,GACTC,WAAY,IACZC,GAAI,WACJC,IAAK,4DACJ,CACDH,QAAS,GACTC,WAAY,IACZC,GAAI,WACJC,IAAK,4DACJ,CACDH,QAAS,GACTC,WAAY,IACZC,GAAI,WACJC,IAAK,8DACJ,CACDH,QAAS,GACTC,WAAY,IACZC,GAAI,OACJC,IAAK,4DACJ,CACDH,QAAS,GACTC,WAAY,IACZC,GAAI,UACJC,IAAK,0DACJ,CACDH,QAAS,GACTC,WAAY,IACZC,GAAI,cACJC,IAAK,8DACJ,CACDH,QAAS,GACTC,WAAY,IACZC,GAAI,OACJC,IAAK,8DACJ,CACDH,QAAS,GACTC,WAAY,IACZC,GAAI,YACJC,IAAK,4DAIDC,EAAU,CAAC,CACfJ,QAAS,GACTC,WAAY,IACZC,GAAI,UACJC,IAAK,2DACJ,CACDH,QAAS,GACTC,WAAY,IACZC,GAAI,UACJC,IAAK,2DACJ,CACDH,QAAS,GACTC,WAAY,IACZC,GAAI,UACJC,IAAK,2DACJ,CACDH,QAAS,GACTC,WAAY,IACZC,GAAI,SACJC,IAAK,mEACJ,CACDH,QAAS,GACTC,WAAY,IACZC,GAAI,UACJC,IAAK,2DACJ,CACDH,QAAS,GACTC,WAAY,IACZC,GAAI,YACJC,IAAK,0DACJ,CACDH,QAAS,GACTC,WAAY,IACZC,GAAI,cACJC,IAAK,iEACJ,CACDH,QAAS,GACTC,WAAY,IACZC,GAAI,aACJC,IAAK,gEACJ,CACDH,QAAS,GACTC,WAAY,IACZC,GAAI,QACJC,IAAK,4DAGDE,EAAc,CAClBC,gBAAiB,SACjBC,UAAW,eACXC,OAAQ,GACRC,UAAW,IAGPC,EAAgB,CACpBJ,gBAAiB,QACjBG,UAAW,GACXF,UAAW,uBAGPI,E,YACJ,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,SAAUJ,GAEZ,EAAKK,UAAY,EAAKA,UAAUC,KAAf,gBACjB,EAAKC,eAAiB,EAAKA,eAAeD,KAApB,gBACtB,EAAKE,YAAc,EAAKA,YAAYF,KAAjB,gBAPF,E,iFAUjBG,SAASC,iBAAiB,UAAWC,KAAKJ,kB,6CAG1CE,SAASG,oBAAoB,UAAWD,KAAKJ,kB,qCAEhCM,GACTA,EAAEvB,UAAYqB,KAAKT,MAAMZ,SAC3BqB,KAAKN,c,oCAIHM,KAAKT,MAAMY,MAC2B,WAAxCH,KAAKR,MAAMC,SAASR,gBAClBe,KAAKI,SAAS,CACZX,SAAUJ,IAEZW,KAAKI,SAAS,CACZX,SAAUT,IAGoB,KAAlCgB,KAAKR,MAAMC,SAASL,UAClBY,KAAKI,SAAS,CACZX,SAAUJ,IAEZW,KAAKI,SAAS,CACZX,SAAU,CACRN,OAAQ,GACRC,UAAW,GACXH,gBAAiB,QACjBC,UAAW,kB,gCAKXgB,GAAI,IAAD,OACLG,EAAQP,SAASQ,eAAeN,KAAKT,MAAMX,YACjDyB,EAAME,YAAc,EACpBF,EAAMG,OACNR,KAAKH,cACLY,YAAW,kBAAM,EAAKZ,gBAAe,KACrCG,KAAKT,MAAMmB,cAAcV,KAAKT,MAAMoB,OAAOC,QAAQ,KAAM,Q,+BAGzD,OACE,yBAAK/B,GAAImB,KAAKT,MAAMoB,OAClBE,QAASb,KAAKN,UACdoB,UAAU,WACVC,MAAOf,KAAKR,MAAMC,UAClB,2BAAOqB,UAAU,OAAOjC,GAAImB,KAAKT,MAAMX,WAAYoC,IAAKhB,KAAKT,MAAM0B,OAClEjB,KAAKT,MAAMX,gB,GA5DEsC,IAAMC,WAkEtBC,E,YACJ,WAAY7B,GAAQ,qEACZA,I,sEAEE,IACJ8B,EADG,OAyBP,OAtBEA,EADFrB,KAAKT,MAAMY,MACCH,KAAKT,MAAM+B,eAAeC,KAAI,SAACC,EAASC,EAAGC,GACnD,OACE,kBAAC,EAAD,CAASC,IAAG,UAAKF,EAAL,QACVd,OAAQe,EAAWD,GAAG5C,GACtBoC,KAAMS,EAAWD,GAAG3C,IACpBF,WAAY8C,EAAWD,GAAG7C,WAC1BD,QAAS+C,EAAWD,GAAG9C,QACvB+B,cAAe,EAAKnB,MAAMmB,cAC1BP,MAAO,EAAKZ,MAAMY,WAGdH,KAAKT,MAAM+B,eAAeC,KAAI,SAACC,EAASC,EAAGC,GACnD,OACE,kBAAC,EAAD,CACEf,OAAQe,EAAWD,GAAG5C,GACtBoC,KAAK,IACLrC,WAAY8C,EAAWD,GAAG7C,WAC1BD,QAAS+C,EAAWD,GAAG9C,QACvB+B,cAAe,EAAKnB,MAAMmB,cAC1BP,MAAO,EAAKZ,MAAMY,WAIxB,yBAAKW,UAAU,YACZO,O,GA/BaH,IAAMC,WAqCtBS,E,YACJ,WAAYrC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXW,OAAO,EACP0B,QAASC,OAAOC,aAAa,KAC7BT,eAAgB5C,EAChBsD,iBAAkB,aAClBC,UAAW,IAEb,EAAKC,gBAAkB,EAAKA,gBAAgBvC,KAArB,gBACvB,EAAKwC,WAAa,EAAKA,WAAWxC,KAAhB,gBAClB,EAAKyC,aAAe,EAAKA,aAAazC,KAAlB,gBACpB,EAAK0C,aAAe,EAAKA,aAAa1C,KAAlB,gBACpB,EAAK2C,aAAe,EAAKA,aAAa3C,KAAlB,gBAbH,E,4EAgBjBK,KAAKI,SAAS,CACZD,OAAQH,KAAKR,MAAMW,MACnB0B,QAASC,OAAOC,aAAa,S,mCAI3B/B,KAAKR,MAAMW,QACmB,eAAhCH,KAAKR,MAAMwC,iBACThC,KAAKI,SAAS,CACZkB,eAAgBvC,EAChB8C,QAAS,mBACTG,iBAAkB,qBAEpBhC,KAAKI,SAAS,CACZkB,eAAgB5C,EAChBmD,QAAS,aACTG,iBAAkB,kB,sCAIVO,GACVvC,KAAKR,MAAMW,OACbH,KAAKI,SAAS,CACZyB,QAASU,M,mCAIFrC,EAAGsC,GAAS,IAAD,OAClBxC,KAAKR,MAAMW,QACbH,KAAKI,SAAS,CACZ6B,UAAWO,EACXX,QAAS,WAAaW,IAExB/B,YAAW,kBAAM,EAAK6B,iBAAgB,Q,qCAIxCtC,KAAKI,SAAS,CACZyB,QAASC,OAAOC,aAAa,S,+BAGvB,IAAD,OACa/B,KAAKR,MAAMW,MAKZH,KAAKR,MAAM8B,eAY9B,MAPgB,GAAGmB,MAAMC,KAAK5C,SAAS6C,uBAAuB,SACtDC,SAAQ,SAAAvC,GACZwC,QAAQC,IAAI,EAAKtD,MAAMyC,WAEvB5B,EAAM0C,OAAS,EAAKvD,MAAMyC,UAAY,OAIxC,yBAAKpD,GAAG,eAAeiC,UAAU,mBAC/B,kBAAC,EAAD,CACEX,MAAOH,KAAKR,MAAMW,MAClBO,cAAeV,KAAKkC,gBACpBc,WAAYhD,KAAKR,MAAMyC,UACvBX,eAAgBtB,KAAKR,MAAM8B,iBAE7B,yBAAKR,UAAU,QACb,yBAAKA,UAAU,eAAe,qBAAuBgB,OAAOC,aAAa,MACzE,uBAAGjB,UAAU,qCAGf,yBAAKA,UAAU,sBAEb,6BACE,uBAAGA,UAAU,QAAb,SACA,kBAACmC,EAAA,EAAD,CAAQnC,UAAU,SAASoC,SAAUlD,KAAKqC,aAAcc,WAAY,CAAE,aAAc,yBAEtF,uBAAGtE,GAAG,WACHmB,KAAKR,MAAMqC,SAEd,yBAAKf,UAAU,iBACb,kBAACsC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMG,MAAI,GACR,kBAAC,IAAD,OAEF,kBAACH,EAAA,EAAD,CAAMG,MAAI,EAACC,IAAE,GACX,kBAACC,EAAA,EAAD,CAAQC,IAAK,EAAGC,IAAK,IAAKC,KAAM,EAAIC,MAAO7D,KAAKR,MAAMyC,UAAWiB,SAAUlD,KAAKoC,aAAc0B,kBAAgB,uBAEhH,kBAACV,EAAA,EAAD,CAAMG,MAAI,GACR,kBAAC,IAAD,SAIN,6BACE,uBAAGzC,UAAU,QAAb,QACA,kBAACmC,EAAA,EAAD,CAAQnC,UAAU,SAASoC,SAAUlD,KAAKmC,WAAYgB,WAAY,CAAE,aAAc,+B,GAjH5EhC,aA0HHS,IAEfmC,IAASC,OAAO,kBAAC,EAAD,MAASlE,SAASQ,eAAe,SC3U7B2D,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNN,IAASC,OAAO,kBAAC,EAAD,MAASlE,SAASQ,eAAe,SD6H3C,kBAAmBgE,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.c2a1f204.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Switch, Grid, Slider } from '@material-ui/core';\nimport ReactDOM from 'react-dom';\nimport VolumeDown from '@material-ui/icons/VolumeDown';\nimport VolumeUp from '@material-ui/icons/VolumeUp';\n\nimport './App.css'\n\nconst bankOne = [{\n  keyCode: 81,\n  keyTrigger: 'Q',\n  id: 'Heater-1',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\n}, {\n  keyCode: 87,\n  keyTrigger: 'W',\n  id: 'Heater-2',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\n}, {\n  keyCode: 69,\n  keyTrigger: 'E',\n  id: 'Heater-3',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\n}, {\n  keyCode: 65,\n  keyTrigger: 'A',\n  id: 'Heater-4',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\n}, {\n  keyCode: 83,\n  keyTrigger: 'S',\n  id: 'Clap',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\n}, {\n  keyCode: 68,\n  keyTrigger: 'D',\n  id: 'Open-HH',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\n}, {\n  keyCode: 90,\n  keyTrigger: 'Z',\n  id: \"Kick-n'-Hat\",\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\n}, {\n  keyCode: 88,\n  keyTrigger: 'X',\n  id: 'Kick',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\n}, {\n  keyCode: 67,\n  keyTrigger: 'C',\n  id: 'Closed-HH',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\n},\n];\n\nconst bankTwo = [{\n  keyCode: 81,\n  keyTrigger: 'Q',\n  id: 'Chord-1',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\n}, {\n  keyCode: 87,\n  keyTrigger: 'W',\n  id: 'Chord-2',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\n}, {\n  keyCode: 69,\n  keyTrigger: 'E',\n  id: 'Chord-3',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\n}, {\n  keyCode: 65,\n  keyTrigger: 'A',\n  id: 'Shaker',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\n}, {\n  keyCode: 83,\n  keyTrigger: 'S',\n  id: 'Open-HH',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\n}, {\n  keyCode: 68,\n  keyTrigger: 'D',\n  id: 'Closed-HH',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\n}, {\n  keyCode: 90,\n  keyTrigger: 'Z',\n  id: 'Punchy-Kick',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\n}, {\n  keyCode: 88,\n  keyTrigger: 'X',\n  id: 'Side-Stick',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\n}, {\n  keyCode: 67,\n  keyTrigger: 'C',\n  id: 'Snare',\n  url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\n}];\n\nconst activeStyle = {\n  backgroundColor: 'orange',\n  boxShadow: \"0 3px orange\",\n  height: 77,\n  marginTop: 13\n}\n\nconst inactiveStyle = {\n  backgroundColor: 'white',\n  marginTop: 10,\n  boxShadow: \"3px 3px 5px #949494\"\n}\n\nclass DrumPad extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      padStyle: inactiveStyle\n    }\n    this.playSound = this.playSound.bind(this);\n    this.handleKeyPress = this.handleKeyPress.bind(this);\n    this.activatePad = this.activatePad.bind(this);\n  }\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress);\n  }\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress);\n  }\n  handleKeyPress(e) {\n    if (e.keyCode === this.props.keyCode) {\n      this.playSound();\n    }\n  }\n  activatePad() {\n    if (this.props.power) {\n      this.state.padStyle.backgroundColor === 'orange' ?\n        this.setState({\n          padStyle: inactiveStyle\n        }) :\n        this.setState({\n          padStyle: activeStyle\n        });\n    } else {\n      this.state.padStyle.marginTop === 13 ?\n        this.setState({\n          padStyle: inactiveStyle\n        }) :\n        this.setState({\n          padStyle: {\n            height: 77,\n            marginTop: 13,\n            backgroundColor: 'white',\n            boxShadow: \"0 3px grey\"\n          }\n        });\n    }\n  }\n  playSound(e) {\n    const sound = document.getElementById(this.props.keyTrigger);\n    sound.currentTime = 0;\n    sound.play();\n    this.activatePad();\n    setTimeout(() => this.activatePad(), 100);\n    this.props.updateDisplay(this.props.clipId.replace(/-/g, ' '));\n  }\n  render() {\n    return (\n      <div id={this.props.clipId}\n        onClick={this.playSound}\n        className=\"drum-pad\"\n        style={this.state.padStyle} >\n        <audio className='clip' id={this.props.keyTrigger} src={this.props.clip}></audio>\n        {this.props.keyTrigger}\n      </div>\n    )\n  }\n}\n\nclass PadBank extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    let padBank;\n    this.props.power ?\n      padBank = this.props.currentPadBank.map((drumObj, i, padBankArr) => {\n        return (\n          <DrumPad key={`${i}-drm`}\n            clipId={padBankArr[i].id}\n            clip={padBankArr[i].url}\n            keyTrigger={padBankArr[i].keyTrigger}\n            keyCode={padBankArr[i].keyCode}\n            updateDisplay={this.props.updateDisplay}\n            power={this.props.power} />\n        )\n      }) :\n      padBank = this.props.currentPadBank.map((drumObj, i, padBankArr) => {\n        return (\n          <DrumPad\n            clipId={padBankArr[i].id}\n            clip=\"#\"\n            keyTrigger={padBankArr[i].keyTrigger}\n            keyCode={padBankArr[i].keyCode}\n            updateDisplay={this.props.updateDisplay}\n            power={this.props.power} />\n        )\n      });\n    return (\n      <div className=\"pad-bank\" >\n        {padBank}\n      </div>\n    )\n  }\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      power: true,\n      display: String.fromCharCode(160),\n      currentPadBank: bankOne,\n      currentPadBankId: 'Heater Kit',\n      sliderVal: 0.3\n    }\n    this.displayClipName = this.displayClipName.bind(this);\n    this.selectBank = this.selectBank.bind(this);\n    this.adjustVolume = this.adjustVolume.bind(this);\n    this.powerControl = this.powerControl.bind(this);\n    this.clearDisplay = this.clearDisplay.bind(this);\n  }\n  powerControl() {\n    this.setState({\n      power: !this.state.power,\n      display: String.fromCharCode(160)\n    });\n  }\n  selectBank() {\n    if (this.state.power) {\n      this.state.currentPadBankId === 'Heater Kit' ?\n        this.setState({\n          currentPadBank: bankTwo,\n          display: 'Smooth Piano Kit',\n          currentPadBankId: 'Smooth Piano Kit',\n        }) :\n        this.setState({\n          currentPadBank: bankOne,\n          display: 'Heater Kit',\n          currentPadBankId: 'Heater Kit',\n        });\n    }\n  }\n  displayClipName(name) {\n    if (this.state.power) {\n      this.setState({\n        display: name\n      });\n    }\n  }\n  adjustVolume(e, volVal) {\n    if (this.state.power) {\n      this.setState({\n        sliderVal: volVal,\n        display: \"Volume: \" + volVal\n      });\n      setTimeout(() => this.clearDisplay(), 1000);\n    }\n  }\n  clearDisplay() {\n    this.setState({\n      display: String.fromCharCode(160)\n    });\n  }\n  render() {\n    const powerSlider = this.state.power ? {\n      float: 'right'\n    } : {\n        float: 'left'\n      };\n    const bankSlider = this.state.currentPadBank === bankOne ? {\n      float: 'left'\n    } : {\n        float: 'right'\n      }; {\n      const clips = [].slice.call(document.getElementsByClassName('clip'));\n      clips.forEach(sound => {\n        console.log(this.state.sliderVal);\n        \n        sound.volume = this.state.sliderVal / 100\n      });\n    }\n    return (\n      <div id=\"drum-machine\" className=\"inner-container\">\n        <PadBank\n          power={this.state.power}\n          updateDisplay={this.displayClipName}\n          clipVolume={this.state.sliderVal}\n          currentPadBank={this.state.currentPadBank} />\n\n        <div className=\"logo\">\n          <div className=\"inner-logo \">{'JEFF DRUM MACHINE.' + String.fromCharCode(160)}</div>\n          <i className=\"inner-logo fa fa-free-code-camp\" />\n        </div>\n\n        <div className=\"controls-container\">\n\n          <div>\n            <p className=\"mb-0\">POWER</p>\n            <Switch className=\"select\" onChange={this.powerControl} inputProps={{ 'aria-label': 'secondary checkbox' }} />\n          </div>\n          <p id=\"display\">\n            {this.state.display}\n          </p>\n          <div className=\"volume-slider\">\n            <Grid container spacing={2}>\n              <Grid item>\n                <VolumeDown />\n              </Grid>\n              <Grid item xs>\n                <Slider min={0} max={100} step={1}  value={this.state.sliderVal} onChange={this.adjustVolume} aria-labelledby=\"continuous-slider\" />\n              </Grid>\n              <Grid item>\n                <VolumeUp />\n              </Grid>\n            </Grid>\n          </div>\n          <div>\n            <p className=\"mb-0\">BANK</p>\n            <Switch className=\"select\" onChange={this.selectBank} inputProps={{ 'aria-label': 'secondary checkbox' }} />\n          </div>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default App;\n\nReactDOM.render(<App />, document.getElementById('root'));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}